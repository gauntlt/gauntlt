#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "/../lib"))
require 'gauntlt'

require 'acclaim'

class Gauntlt::Command < Acclaim::Command
  option :help,     '-h', '--help',    'Help outputs available command options'
  option :version,  '-v', '--version', 'Version of app'

  when_called do |options, args|
    if options.help? || options.empty?
      help options: false
      Gauntlt::Command.run 'help'
    elsif options.version?
      puts Gauntlt::VERSION
    end
  end
end

# gauntlt attack ...
class Gauntlt::Command::Attack < Gauntlt::Command
  option :help, '-h', '--help', 'Help outputs available command options'
  option :list, '-l', '--list', 'List of available attacks'

  option :name, '-n', '--name', 'Name of attack to launch', arity: [1, 0]
  option :host, '-H', '--host', 'Host to attack', arity: [1, 0]

  action do |options, args|
    if options.list? || options.empty?
      puts "Available attacks:"
      puts ""
      puts Gauntlt.attacks.map{|a| "  #{a}"}.join("\n")
      puts ""
      puts "  try: gauntlt attack -n nmap"
    elsif options.help?
      help options: false
      Gauntlt::Command.run 'help'
    else
      puts Gauntlt.attack(options.name, :host => options.host)
    end
  end
end

Gauntlt::Command.run *ARGV